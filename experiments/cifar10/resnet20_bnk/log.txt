[2021-03-06 15:03:22,357] - [train.py line:171] : {'architecture': 'resnet20_bnk', 'data_path': './data', 'ckpt_path': './', 'ckpt_name': 'resnet20_bnk', 'num_classes': 10, 'dataset': 'cifar10', 'use_gpu': True, 'input_size': 32, 'epochs': 250, 'batch_size': 128, 'test_batch': 200, 'eval_freq': 2, 'workers': 4, 'optimize': {'momentum': 0.9, 'weight_decay': 0.0001, 'nesterov': True}, 'mixup': False, 'mixup_alpha': 0.4, 'augmentation': {'normalize': True, 'random_crop': True, 'random_horizontal_filp': True, 'cutout': False, 'holes': 1, 'length': 8}, 'lr_scheduler': {'type': 'STEP', 'base_lr': 0.1, 'lr_epochs': [100, 150, 200], 'lr_mults': 0.1, 'min_lr': 0.0, 'lower_bound': -6.0, 'upper_bound': 3.0}}
[2021-03-06 15:03:22,379] - [train.py line:175] : ResNet(
  (conv_1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn_1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (stage_1): Sequential(
    (0): Bottleneck(
      (conv_1): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn_1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_3): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn_3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv_1): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn_1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_3): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn_3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (stage_2): Sequential(
    (0): Bottleneck(
      (conv_1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn_2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_3): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn_3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv_1): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_3): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn_3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (stage_3): Sequential(
    (0): Bottleneck(
      (conv_1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn_3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Bottleneck(
      (conv_1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv_3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn_3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (avgpool): AvgPool2d(kernel_size=8, stride=8, padding=0)
  (fc): Linear(in_features=256, out_features=10, bias=True)
)
[2021-03-06 15:03:22,379] - [train.py line:176] :  == total parameters: 220378
[2021-03-06 15:06:39,448] - [train.py line:214] :             =======  Training  =======

[2021-03-06 15:06:39,449] - [train.py line: 50] :  === Epoch: [1/250] === 
[2021-03-06 15:06:44,694] - [train.py line: 92] :    == step: [100/391], train loss: 2.141 | train acc: 23.734% | lr: 0.100000
[2021-03-06 15:06:46,535] - [train.py line: 92] :    == step: [200/391], train loss: 1.893 | train acc: 30.758% | lr: 0.100000
[2021-03-06 15:06:48,350] - [train.py line: 92] :    == step: [300/391], train loss: 1.749 | train acc: 35.977% | lr: 0.100000
[2021-03-06 15:06:50,254] - [train.py line:102] :    == step: [391/391], train loss: 1.649 | train acc: 39.606% | lr: 0.100000
[2021-03-06 15:06:50,254] - [train.py line:107] :    == cost time: 10.8053s
[2021-03-06 15:06:50,256] - [train.py line:126] :  === Validate ===
[2021-03-06 15:06:53,052] - [train.py line:141] :    == test loss: 1.492 | test acc: 47.760%
[2021-03-06 15:06:53,077] - [train.py line: 50] :  === Epoch: [2/250] === 
[2021-03-06 15:06:57,649] - [train.py line: 92] :    == step: [100/391], train loss: 1.204 | train acc: 56.047% | lr: 0.100000
[2021-03-06 15:06:59,459] - [train.py line: 92] :    == step: [200/391], train loss: 1.165 | train acc: 57.902% | lr: 0.100000
[2021-03-06 15:07:01,337] - [train.py line: 92] :    == step: [300/391], train loss: 1.130 | train acc: 59.240% | lr: 0.100000
[2021-03-06 15:07:03,100] - [train.py line:102] :    == step: [391/391], train loss: 1.100 | train acc: 60.314% | lr: 0.100000
[2021-03-06 15:07:03,101] - [train.py line:107] :    == cost time: 10.0242s
[2021-03-06 15:07:03,103] - [train.py line:126] :  === Validate ===
[2021-03-06 15:07:06,397] - [train.py line:141] :    == test loss: 1.109 | test acc: 61.730%
[2021-03-06 15:07:06,426] - [train.py line: 50] :  === Epoch: [3/250] === 
